{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.keyWord = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.keyWord]]), _createElementVNode(\"h3\", null, _toDisplayString($setup.keyWord), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6EACEA,oBAAqC;IAA9BC,IAAI,EAAC,MAAM;+DAAUC,cAAO;iDAAPA,cAAO,KACnCF,oBAAoB,6BAAdE,cAAO","names":["_createElementVNode","type","$setup"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/App.vue"],"sourcesContent":["<template>\n  <input type=\"text\" v-model=\"keyWord\">\n  <h3>{{keyWord}}</h3>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'App',\n  setup() {\n    // 自定义一个ref,名为:myref\n    function myref(value){\n      console.log('myref',value)\n    }\n    // let keyWord=ref('hello') // 使用vue提供的ref\n    let keyWord1=myref('hello') // 使用程序员自定义的ref\n\n    return {\n      keyWord,\n      keyWord1\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}