{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"son\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, \"我是Son组件,\" + _toDisplayString($setup.car.name) + \"--\" + _toDisplayString($setup.car.price), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAK;;uBAAhBC,oBAEM,OAFNC,UAEM,GADJC,oBAA4C,YAAxC,UAAQ,oBAAEC,UAAG,CAACC,IAAI,IAAE,IAAE,oBAAED,UAAG,CAACE,KAAK","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","$setup","name","price"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Son.vue"],"sourcesContent":["<template>\n    <div class=\"son\">\n      <h3>我是Son组件,{{car.name}}--{{car.price}}</h3>\n    </div>\n  </template>\n  \n  <script>\nimport { inject } from 'vue'\n\n  export default {\n    name:'Son',\n    setup(){\n        let car=inject('car')\n\n        return {\n            car\n        }\n    }\n  }\n  </script>\n  \n  <style>\n  .son{\n    background-color: orange;\n    padding: 10px;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}