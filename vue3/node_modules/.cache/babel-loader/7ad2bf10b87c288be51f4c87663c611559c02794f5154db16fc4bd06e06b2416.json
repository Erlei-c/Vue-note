{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderSlot as _renderSlot, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"我是Demo组件\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString($setup.person.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString($setup.person.age), 1 /* TEXT */), _renderSlot(_ctx.$slots, \"default\"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.test1 && $setup.test1(...args))\n  }, \"测试触发一下Demo组件的Hello事件\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAiB,YAAb,UAAQ;;;6DAAZC,UAAiB,EACjBD,oBAA2B,YAAvB,KAAG,oBAAEE,aAAM,CAACC,IAAI,kBACpBH,oBAA0B,YAAtB,KAAG,oBAAEE,aAAM,CAACE,GAAG,kBACnBC,YAAaC,yBACbN,oBAAoD;IAA3CO,OAAK,yCAAEL,qCAAK;KAAE,sBAAoB","names":["_createElementVNode","_hoisted_1","$setup","name","age","_renderSlot","_ctx","onClick"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Demo.vue"],"sourcesContent":["<template>\n    <h1>我是Demo组件</h1>\n    <h2>姓名:{{person.name}}</h2>\n    <h2>年龄:{{person.age}}</h2>\n    <slot></slot>\n    <button @click=\"test1\">测试触发一下Demo组件的Hello事件</button>\n  </template>\n  \n  <script>\n  import { reactive } from 'vue'\n  export default {\n    name: 'App',\n    props:['msg'],\n    emits:['hello'],\n    setup(props,context){\n        // console.log('---setup---',props,context)\n        // console.log('---setup---',context.attrs) // 相当于Vue2中$attrs\n        // console.log('---setup---',context.emit) // 相当于Vue2中$emit 触发自定义事件\n        console.log('---setup---',context.slots) // 插槽\n\n      // 数据\n      let person=reactive({\n          name:'张三',\n          age:18,\n      })\n      // 方法\n      function test1(){\n        context.emit('hello',666)\n      }\n      return{\n        person,\n        test1\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}