{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"我是app组件\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模版结构可以没有根标签 \"), _hoisted_1, _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString(_ctx.age), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"性别:\" + _toDisplayString(_ctx.sex), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.sayHello && _ctx.sayHello(...args))\n  }, \"弹窗(Vue3)\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.sayWelcome && _ctx.sayWelcome(...args))\n  }, \"弹窗(Vue2)\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.test1 && _ctx.test1(...args))\n  }, \"测试一下在Vue2配置中读取Vue3的配置\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.test2 && _ctx.test2(...args))\n  }, \"测试一下在Vue2配置中读取Vue3的配置\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAAgB,YAAZ,SAAO;;;6DADXC,4CAA4B,EAC5BC,UAAgB,EAChBF,oBAAoB,YAAhB,KAAG,oBAAEG,SAAI,kBACbH,oBAAmB,YAAf,KAAG,oBAAEG,QAAG,kBACZH,oBAAmB,YAAf,KAAG,oBAAEG,QAAG,kBACZH,oBAA2C;IAAlCI,OAAK,yCAAED,uCAAQ;KAAE,UAAQ,GAClCH,oBAA6C;IAApCI,OAAK,yCAAED,2CAAU;KAAE,UAAQ,GACpCH,oBAAqD;IAA5CI,OAAK,yCAAED,iCAAK;KAAE,uBAAqB,GAC5CH,oBAAqD;IAA5CI,OAAK,yCAAED,iCAAK;KAAE,uBAAqB","names":["_createElementVNode","_createCommentVNode","_hoisted_1","_ctx","onClick"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/App.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模版结构可以没有根标签 -->\n  <h1>我是app组件</h1>\n  <h2>姓名:{{name}}</h2>\n  <h2>年龄:{{age}}</h2>\n  <h2>性别:{{sex}}</h2>\n  <button @click=\"sayHello\">弹窗(Vue3)</button>\n  <button @click=\"sayWelcome\">弹窗(Vue2)</button>\n  <button @click=\"test1\">测试一下在Vue2配置中读取Vue3的配置</button>\n  <button @click=\"test2\">测试一下在Vue2配置中读取Vue3的配置</button>\n</template>\n\n<script>\n// import {h} from 'vue'\nexport default {\n  name: 'App',\n  // 向下兼容vue2中的写法(但不建议这么写)\n  data() {\n    return {\n      sex:'男'\n    }\n  },\n  methods: {\n    sayWelcome(){\n      alert('欢迎!')\n    },\n    test1(){\n      console.log(this.sex)\n      console.log(this.name)\n      console.log(this.age)\n      console.log(this.sayHello)\n      this.sayHello()\n    }\n  },\n  // 组件中所有用到的:数据,方法等均要配置再setup中\n  setup(){\n    // 数据\n    let name='张三'\n    let age=18\n    // 方法\n    function sayHello(){\n      alert(`我叫${name},我${age}岁了,你好啊!`)\n    }\n    function test2(){\n      console.log(this.sex)\n      console.log(this.name)\n      console.log(this.age)\n      console.log(this.sayHello)\n      this.sayHello(\n    }\n    // setup函数的两种返回值\n    // 1.若返回一个对象,则对象中的属性,方法,在模版中可以直接使用\n    return{\n      name,\n      age,\n      sayHello\n    }\n    // 2.若返回一个渲染函数,则可以自定义渲染内容\n    //  (1)参数:第一个参数为标签名,第二个参数为内容\n    //  (2)需先引入h import {h} from 'vue'\n    // return ()=>h('h1','HelloWorld')\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}