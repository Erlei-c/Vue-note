{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"我是app组件\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue3组件中的模版结构可以没有根标签 \"), _hoisted_1, _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString($setup.person.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString($setup.person.age), 1 /* TEXT */), _createElementVNode(\"h3\", null, \"工作种类:\" + _toDisplayString($setup.person.job.type), 1 /* TEXT */), _createElementVNode(\"h3\", null, \"工作薪水:\" + _toDisplayString($setup.person.job.salary), 1 /* TEXT */), _createElementVNode(\"h3\", null, \"爱好:\" + _toDisplayString($setup.person.hobby), 1 /* TEXT */), _createElementVNode(\"h3\", null, \"测试的数据:\" + _toDisplayString($setup.person.job.a.b.c), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.changeInfo && $setup.changeInfo(...args))\n  }, \"修改一个人的信息\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.addSex && $setup.addSex(...args))\n  }, \"添加一个sex属性\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.deleteName && $setup.deleteName(...args))\n  }, \"删除一个name属性\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAAgB,YAAZ,SAAO;;;6DADXC,4CAA4B,EAC5BC,UAAgB,EAChBF,oBAA2B,YAAvB,KAAG,oBAAEG,aAAM,CAACC,IAAI,kBACpBJ,oBAA0B,YAAtB,KAAG,oBAAEG,aAAM,CAACE,GAAG,kBACnBL,oBAAiC,YAA7B,OAAK,oBAAEG,aAAM,CAACG,GAAG,CAACC,IAAI,kBAC1BP,oBAAmC,YAA/B,OAAK,oBAAEG,aAAM,CAACG,GAAG,CAACE,MAAM,kBAC5BR,oBAA4B,YAAxB,KAAG,oBAAEG,aAAM,CAACM,KAAK,kBACrBT,oBAAmC,YAA/B,QAAM,oBAAEG,aAAM,CAACG,GAAG,CAACI,CAAC,CAACC,CAAC,CAACC,CAAC,kBAC5BZ,oBAA6C;IAApCa,OAAK,yCAAEV,+CAAU;KAAE,UAAQ,GACpCH,oBAA0C;IAAjCa,OAAK,yCAAEV,uCAAM;KAAE,WAAS,GACjCH,oBAA+C;IAAtCa,OAAK,yCAAEV,+CAAU;KAAE,YAAU","names":["_createElementVNode","_createCommentVNode","_hoisted_1","$setup","name","age","job","type","salary","hobby","a","b","c","onClick"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/App.vue"],"sourcesContent":["<template>\n  <!-- Vue3组件中的模版结构可以没有根标签 -->\n  <h1>我是app组件</h1>\n  <h2>姓名:{{person.name}}</h2>\n  <h2>年龄:{{person.age}}</h2>\n  <h3>工作种类:{{person.job.type}}</h3>\n  <h3>工作薪水:{{person.job.salary}}</h3>\n  <h3>爱好:{{person.hobby}}</h3>\n  <h3>测试的数据:{{person.job.a.b.c}}</h3>\n  <button @click=\"changeInfo\">修改一个人的信息</button>\n  <button @click=\"addSex\">添加一个sex属性</button>\n  <button @click=\"deleteName\">删除一个name属性</button>\n</template>\n\n<script>\n// import { ref} from 'vue'\nimport { reactive } from 'vue'\nexport default {\n  name: 'App',\n  // 组件中所有用到的:数据,方法等均要配置再setup中\n  setup(){\n    // 数据\n    // refImpl:reference-implement 引用-实现 引用实现实例对象,简写:引用对象\n    let person=reactive({\n        name:'张三',\n        age:18,\n        job:{\n          type:'前端工程师',\n          salary:'30k',\n          a:{\n            b:{\n              c:666\n            }\n          }\n        },\n        hobby:['抽烟','喝酒','烫头'],\n    })\n    // 方法\n    function changeInfo(){\n      person.name='李四'\n      person.age=25\n      person.job.type='全栈工程师'\n      person.job.salary='50k'\n      person.job.a.b.c=777\n      person.hobby=[1,2,3]\n    }\n    function addSex(){\n      person.sex='男'\n    }\n    function deleteName(){\n      delete person.name\n    }\n    return{\n      person,\n      changeInfo,\n      addSex,\n      deleteName,\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}