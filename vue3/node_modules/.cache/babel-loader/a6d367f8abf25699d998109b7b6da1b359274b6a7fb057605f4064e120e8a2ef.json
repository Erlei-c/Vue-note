{"ast":null,"code":"import { reactive, toRef, toRefs } from \"vue\";\nexport default {\n  name: \"App\",\n  setup() {\n    // 数据\n    let person = reactive({\n      name: \"张三\",\n      age: 18,\n      job: {\n        j1: {\n          salay: 20\n        }\n      }\n    });\n    const name1 = person.name;\n    console.log('###name1', name1);\n    const name2 = toRef(person, 'name');\n    console.log('@@@name2', name2);\n    return {\n      // 如下代码 不是响应式,而是简单的赋值\n      /*\n          let obj={a:1}\n          a=obj.a\n          a=100\n      */\n      // name:person.name, // 等同于 name=person.name\n      name: toRef(person, 'name'),\n      age: toRef(person, 'age'),\n      salay: toRef(person.job.j1, 'salay')\n    };\n  }\n};","map":{"version":3,"mappings":"AAWE,SAASA,QAAQ,EAAEC,KAAK,EAACC,MAAK,QAAS,KAAK;AAC5C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAK,GAAG;IACN;IACA,IAAIC,MAAM,GAACL,QAAQ,CAAC;MAChBG,IAAI,EAAC,IAAI;MACTG,GAAG,EAAC,EAAE;MACNC,GAAG,EAAC;QACAC,EAAE,EAAC;UACCC,KAAK,EAAC;QACV;MACJ;IACJ,CAAC;IACD,MAAMC,KAAK,GAACL,MAAM,CAACF,IAAG;IACtBQ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,KAAK;IAC5B,MAAMG,KAAK,GAACZ,KAAK,CAACI,MAAM,EAAC,MAAM;IAC/BM,OAAO,CAACC,GAAG,CAAC,UAAU,EAACC,KAAK;IAC5B,OAAO;MACL;MACA;;;;;MAKA;MACAV,IAAI,EAACF,KAAK,CAACI,MAAM,EAAC,MAAM,CAAC;MACzBC,GAAG,EAACL,KAAK,CAACI,MAAM,EAAC,KAAK,CAAC;MACvBI,KAAK,EAACR,KAAK,CAACI,MAAM,CAACE,GAAG,CAACC,EAAE,EAAC,OAAO;IACnC,CAAC;EACH;AACF,CAAC","names":["reactive","toRef","toRefs","name","setup","person","age","job","j1","salay","name1","console","log","name2"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Demo.vue"],"sourcesContent":["<template>\n\n    <h2>姓名:{{name}}</h2>\n    <h2>年龄:{{age}}</h2>\n    <h2>薪水:{{salay}}k</h2>\n    <button @click=\"name+='~'\">修改姓名</button>\n    <button @click=\"age++\">修改年龄</button>\n    <button @click=\"salay++\">涨薪</button>\n  </template>\n    \n    <script>\n  import { reactive, toRef,toRefs } from \"vue\";\n  export default {\n    name: \"App\",\n    setup() {\n      // 数据\n      let person=reactive({\n          name:\"张三\",\n          age:18,\n          job:{\n              j1:{\n                  salay:20\n              }\n          }\n      })\n      const name1=person.name\n      console.log('###name1',name1)\n      const name2=toRef(person,'name')\n      console.log('@@@name2',name2)\n      return {\n        // 如下代码 不是响应式,而是简单的赋值\n        /*\n            let obj={a:1}\n            a=obj.a\n            a=100\n        */ \n        // name:person.name, // 等同于 name=person.name\n        name:toRef(person,'name'),\n        age:toRef(person,'age'),\n        salay:toRef(person.job.j1,'salay'),\n      };\n    },\n  };\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}