{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Demo = _resolveComponent(\"Demo\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClic: _cache[0] || (_cache[0] = () => {}),\n    k: \"isShowDemo\"\n  }, \"切换隐藏/显示\", 32 /* HYDRATE_EVENTS */), $setup.isShowDemo ? (_openBlock(), _createBlock(_component_Demo, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACEA,oBAA6C;IAApCC,MAAI,4BAAL,QAAK;IAACC,CAAC,EAAC;KAAa,SAAO,4BACxBC,iBAAU,kBAAtBC,aAA+BC;IAAAC;EAAA","names":["_createElementVNode","onClic","k","$setup","_createBlock","_component_Demo","key"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/App.vue"],"sourcesContent":["<template>\n  <button @clic k=\"isShowDemo\">切换隐藏/显示</button>\n  <Demo v-if=\"isShowDemo\"></Demo>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport Demo from './components/Demo.vue'\nexport default {\n  name: 'App',\n  components:{Demo},\n  setup() {\n    let isShowDemo=ref(true)\n\n    return {\n      isShowDemo\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}