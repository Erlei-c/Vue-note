{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h4\", null, _toDisplayString($setup.person), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"姓名:\" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"年龄:\" + _toDisplayString(_ctx.age), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"薪水:\" + _toDisplayString(_ctx.job.j1.salay) + \"k\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.name += '~')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.age++)\n  }, \"修改年龄\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.job.j1.salay++)\n  }, \"涨薪\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACIA,oBAAmB,6BAAbC,aAAM,kBACdD,oBAAsB,YAAlB,KAAG,oBAAGE,SAAI,kBACdF,oBAAqB,YAAjB,KAAG,oBAAGE,QAAG,kBACbF,oBAA+B,YAA3B,KAAG,oBAAGE,QAAG,CAACC,EAAE,CAACC,KAAK,IAAG,GAAC,iBAC1BJ,oBAA0C;IAAjCK,OAAK,sCAAEH,SAAI;KAAS,MAAI,GACjCF,oBAAoC;IAA3BK,OAAK,sCAAEH,QAAG;KAAI,MAAI,GAC3BF,oBAA2C;IAAlCK,OAAK,sCAAEH,QAAG,CAACC,EAAE,CAACC,KAAK;KAAI,IAAE","names":["_createElementVNode","$setup","_ctx","j1","salay","onClick"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Demo.vue"],"sourcesContent":["<template>\n    <h4>{{person}}</h4>\n  <h2>姓名:{{ name }}</h2>\n  <h2>年龄:{{ age }}</h2>\n  <h2>薪水:{{ job.j1.salay }}k</h2>\n  <button @click=\"name += '~'\">修改姓名</button>\n  <button @click=\"age++\">修改年龄</button>\n  <button @click=\"job.j1.salay++\">涨薪</button>\n</template>\n    \n    <script>\nimport { reactive,toRefs,shallowRef,shallowReactive } from \"vue\";\nexport default {\n  name: \"App\",\n  setup() {\n    // 数据\n    // let person = shallowReactive({  // 只考虑\n    let person = reactive({\n      name: \"张三\",\n      age: 18,\n      job: {\n        j1: {\n          salay: 20,\n        },\n      },\n    });\n\n    return {\n        person,\n      ...toRefs(person),\n    };\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}