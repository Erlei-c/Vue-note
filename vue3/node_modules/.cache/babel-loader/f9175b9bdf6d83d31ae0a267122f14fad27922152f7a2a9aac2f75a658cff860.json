{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"一个人的信息\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" 姓: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.person.firstName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.person.firstName]]), _hoisted_2, _createTextVNode(\" 名: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.person.lastName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.person.lastName]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAe,YAAX,QAAM;gCAEVA,oBAAI;;;6DAFJC,UAAe,yBACZ,uCAA8C;IAAvCC,IAAI,EAAC,MAAM;+DAAUC,aAAM,CAACC,SAAS;iDAAhBD,aAAM,CAACC,SAAS,KAC/CC,UAAI,yBACD,uCAA6C;IAAtCH,IAAI,EAAC,MAAM;+DAAUC,aAAM,CAACG,QAAQ;iDAAfH,aAAM,CAACG,QAAQ","names":["_createElementVNode","_hoisted_1","type","$setup","firstName","_hoisted_2","lastName"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Demo.vue"],"sourcesContent":["<template>\n    <h1>一个人的信息</h1>\n    姓: <input type=\"text\" v-model=\"person.firstName\">\n    <br>\n    名: <input type=\"text\" v-model=\"person.lastName\">\n    \n  </template>\n  \n  <script>\n  import { reactive } from 'vue'\n  export default {\n    name: 'App',\n    computed:{\n      fullName(){\n        return this.person,firstName+'-'+this.person,lastName\n      }  \n    },\n    setup(){\n      // 数据\n      let person=reactive({\n          firstName:'张',\n          lastName:'三',\n      })\n      // 方法\n\n      return{\n        person,\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}