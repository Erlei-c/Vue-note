{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h2\", null, \"当前求和为:\" + _toDisplayString(_ctx.sum), 1 /* TEXT */);\n}","map":{"version":3,"mappings":";;uBACIA,oBAAsB,YAAlB,QAAM,oBAAEC,QAAG","names":["_createElementBlock","_ctx"],"sourceRoot":"","sources":["/Users/erlei-c/Desktop/Vue-note/vue3/src/components/Demo.vue"],"sourcesContent":["<template>\n    <h2>当前求和为:{{sum}}</h2>\n</template>\n  \n  <script>\nimport { ref } from 'vue'\n  export default {\n    name: 'App',\n    setup(){\n      // 数据\n    let person=reactive({\n      firstName:'张',\n      lastName:'三',\n    })\n    // 计算属性--简写(没有考虑计算属性被修改的属性)\n    // person.fullName=computed(()=>{\n    //     return person.firstName+'-'+person.lastName\n    // })\n    // 计算属性--完整写法(考虑读写)\n    person.fullName=computed({\n        get(){\n            return person.firstName+'-'+person.lastName \n        },\n        set(value){\n            const nameArr=value.split('-')\n            person.firstName=nameArr[0]\n            person.lastName=nameArr[1]\n        }\n    })\n    // 方法\n\n      return{\n        person,\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}